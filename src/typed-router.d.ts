/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// Generated by unplugin-vue-router. ‼️ DO NOT MODIFY THIS FILE ‼️
// It's recommended to commit this file.
// Make sure to add this file to your tsconfig.json file as an "includes" or "files" entry.

declare module 'vue-router/auto-routes' {
  import type {
    RouteRecordInfo,
    ParamValue,
    ParamValueOneOrMore,
    ParamValueZeroOrMore,
    ParamValueZeroOrOne,
  } from 'vue-router'

  /**
   * Route name map generated by unplugin-vue-router
   */
  export interface RouteNamedMap {
    '/Account': RouteRecordInfo<'/Account', '/Account', Record<never, never>, Record<never, never>>,
    '/EditProfile': RouteRecordInfo<'/EditProfile', '/EditProfile', Record<never, never>, Record<never, never>>,
    '/ForgotPassword': RouteRecordInfo<'/ForgotPassword', '/ForgotPassword', Record<never, never>, Record<never, never>>,
    '/Gift': RouteRecordInfo<'/Gift', '/Gift', Record<never, never>, Record<never, never>>,
    '/GiftDetail': RouteRecordInfo<'/GiftDetail', '/GiftDetail', Record<never, never>, Record<never, never>>,
    '/HelpCenter': RouteRecordInfo<'/HelpCenter', '/HelpCenter', Record<never, never>, Record<never, never>>,
    '/Home': RouteRecordInfo<'/Home', '/Home', Record<never, never>, Record<never, never>>,
    '/Intro': RouteRecordInfo<'/Intro', '/Intro', Record<never, never>, Record<never, never>>,
    '/Language': RouteRecordInfo<'/Language', '/Language', Record<never, never>, Record<never, never>>,
    '/Login': RouteRecordInfo<'/Login', '/Login', Record<never, never>, Record<never, never>>,
    '/MessageDetail': RouteRecordInfo<'/MessageDetail', '/MessageDetail', Record<never, never>, Record<never, never>>,
    '/Messages': RouteRecordInfo<'/Messages', '/Messages', Record<never, never>, Record<never, never>>,
    '/Notifications': RouteRecordInfo<'/Notifications', '/Notifications', Record<never, never>, Record<never, never>>,
    '/PaymentMethods': RouteRecordInfo<'/PaymentMethods', '/PaymentMethods', Record<never, never>, Record<never, never>>,
    '/PointsHistory': RouteRecordInfo<'/PointsHistory', '/PointsHistory', Record<never, never>, Record<never, never>>,
    '/Privacy': RouteRecordInfo<'/Privacy', '/Privacy', Record<never, never>, Record<never, never>>,
    '/Register': RouteRecordInfo<'/Register', '/Register', Record<never, never>, Record<never, never>>,
    '/SavedAddresses': RouteRecordInfo<'/SavedAddresses', '/SavedAddresses', Record<never, never>, Record<never, never>>,
    '/Settings': RouteRecordInfo<'/Settings', '/Settings', Record<never, never>, Record<never, never>>,
    '/Support': RouteRecordInfo<'/Support', '/Support', Record<never, never>, Record<never, never>>,
    '/Terms': RouteRecordInfo<'/Terms', '/Terms', Record<never, never>, Record<never, never>>,
    '/TripHistory': RouteRecordInfo<'/TripHistory', '/TripHistory', Record<never, never>, Record<never, never>>,
    '/Trips': RouteRecordInfo<'/Trips', '/Trips', Record<never, never>, Record<never, never>>,
    '/Welcome': RouteRecordInfo<'/Welcome', '/Welcome', Record<never, never>, Record<never, never>>,
  }

  /**
   * Route file to route info map by unplugin-vue-router.
   * Used by the volar plugin to automatically type useRoute()
   *
   * Each key is a file path relative to the project root with 2 properties:
   * - routes: union of route names of the possible routes when in this page (passed to useRoute<...>())
   * - views: names of nested views (can be passed to <RouterView name="...">)
   *
   * @internal
   */
  export interface _RouteFileInfoMap {
    'src/pages/Account.vue': {
      routes: '/Account'
      views: never
    }
    'src/pages/EditProfile.vue': {
      routes: '/EditProfile'
      views: never
    }
    'src/pages/ForgotPassword.vue': {
      routes: '/ForgotPassword'
      views: never
    }
    'src/pages/Gift.vue': {
      routes: '/Gift'
      views: never
    }
    'src/pages/GiftDetail.vue': {
      routes: '/GiftDetail'
      views: never
    }
    'src/pages/HelpCenter.vue': {
      routes: '/HelpCenter'
      views: never
    }
    'src/pages/Home.vue': {
      routes: '/Home'
      views: never
    }
    'src/pages/Intro.vue': {
      routes: '/Intro'
      views: never
    }
    'src/pages/Language.vue': {
      routes: '/Language'
      views: never
    }
    'src/pages/Login.vue': {
      routes: '/Login'
      views: never
    }
    'src/pages/MessageDetail.vue': {
      routes: '/MessageDetail'
      views: never
    }
    'src/pages/Messages.vue': {
      routes: '/Messages'
      views: never
    }
    'src/pages/Notifications.vue': {
      routes: '/Notifications'
      views: never
    }
    'src/pages/PaymentMethods.vue': {
      routes: '/PaymentMethods'
      views: never
    }
    'src/pages/PointsHistory.vue': {
      routes: '/PointsHistory'
      views: never
    }
    'src/pages/Privacy.vue': {
      routes: '/Privacy'
      views: never
    }
    'src/pages/Register.vue': {
      routes: '/Register'
      views: never
    }
    'src/pages/SavedAddresses.vue': {
      routes: '/SavedAddresses'
      views: never
    }
    'src/pages/Settings.vue': {
      routes: '/Settings'
      views: never
    }
    'src/pages/Support.vue': {
      routes: '/Support'
      views: never
    }
    'src/pages/Terms.vue': {
      routes: '/Terms'
      views: never
    }
    'src/pages/TripHistory.vue': {
      routes: '/TripHistory'
      views: never
    }
    'src/pages/Trips.vue': {
      routes: '/Trips'
      views: never
    }
    'src/pages/Welcome.vue': {
      routes: '/Welcome'
      views: never
    }
  }

  /**
   * Get a union of possible route names in a certain route component file.
   * Used by the volar plugin to automatically type useRoute()
   *
   * @internal
   */
  export type _RouteNamesForFilePath<FilePath extends string> =
    _RouteFileInfoMap extends Record<FilePath, infer Info>
      ? Info['routes']
      : keyof RouteNamedMap
}
